intro: |
  This page is a sample of the most common packages. To see a complete list see [the complete package list page](https://www.stackage.org/lts).

fundamentals-intro: |
  Core packages solve common problems and are regularly used in most Haskell programs.

fundamentals:
- name: base
  description: |
    Basic data types, file input/output, environment, concurrency, etc.
- name: text
  description: |
    Efficient immutable string/text data type for text/unicode data.
- name: time
  description: |
    Dealing with dates, times, time zones, milliseconds, durations, etc.
- name: filepath
  description: |
    Portably deal with file paths across Windows, OS X, Linux, etc.
- name: vector
  description: |
    Efficient arrays, immutable and mutable versions.
- name: containers
  description: |
    Immutable maps/dictionaries, sets, and sequences with efficient appending.
- name: unordered-containers
  description: |
    Immutable maps/dictionaries and sets, implemented with hashes.
- name: directory
  description: |
    Portably deal with directories, files, file properties, etc.
- name: bytestring
  description: |
    Efficient immutable vectors of bytes for handling binary data.
- name: optparse-applicative
  description: |
    Utilities and combinators for parsing command line options
- name: criterion
  description: |
    Time how long (benchmark) your functions take to run with reliable statistical analysis.
- name: network
  description: |
    Network programming; TCP/UDP sockets, UNIX domain sockets, etc.
- name: process
  description: |
    Launch processes, one-shot or interactively, handle stdout, stderr, etc.
- name: async
  description: |
    Abstraction for performing many actions asynchronously and concurrently.
- name: aeson
  description: |
    Efficient JSON parsing and printing, automatic deriving for your data types, etc.
- name: attoparsec
  description: |
    Efficient parsing library, good for network protocols and complicated binary formats.
- name: quickcheck
  description: |
    Check properties about functions with randomly generated inputs for sanity checks.
- name: stm
  description: |
    Software-transactional memory; for atomic, reliable, composable, concurrency.
- name: exceptions
  description: |
    Extensible optionally-pure exceptions, abstracting over various types.
- name: regex-compat
  description: |
    Simple POSIX-compatible regex matching.

commons-intro: |
    Packages for common tasks in Haskell programs. There is typically more than one option for these kind of tasks. The descriptions below will help you choose which package to use.

commons:
- title: Test Framework
  slug: test-framework
  description: |
      Haskell has multiple libraries for writing individual test cases. Two commonly used libraries are [HUnit](https://www.stackage.org/package/HUnit) (for typical unit tests) and [QuickCheck](https://www.stackage.org/package/QuickCheck) (for property based testing).

      At the end of the day, you'll want to build up a test suite from all of these individuals test cases. This is where a test framework comes into play.

  choices:
  - name: hspec
    description: |
      A testing framework inspired by the Ruby library RSpec,
      featuring a friendly language for defining tests, integration
      with QuickCheck, SmallCheck, and HUnit; parallel test execution;
      and automatic discovery of test files.
